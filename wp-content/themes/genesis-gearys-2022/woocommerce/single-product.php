<?php
/**
 * This template displays the single Product.
 *
 * @package Genesis_Connect_WooCommerce
 * @version 1.6.4
 * @since 0.9.0
 *
 * Note for customisers/users: Do not edit this file!
 * ==================================================
 * If you want to customise this template, copy this file (keep same name) and place the
 * copy in the child theme's woocommerce folder, ie themes/my-child-theme/woocommerce
 * (Your theme may not have a 'woocommerce' folder, in which case create one.)
 * The version in the child theme's woocommerce folder will override this template, and
 * any future updates to this plugin won't wipe out your customisations.
 */

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

// CONSTANT DEFINING THE SALESPEOPLE DETAILS.
require_once get_stylesheet_directory() . '/woocommerce/salespeople.php';

remove_action( 'genesis_loop', 'genesis_do_loop' );
// remove_action( 'woocommerce_before_main_content', 'woocommerce_breadcrumb', 20 );
remove_action( 'woocommerce_before_main_content', 'woocommerce_output_content_wrapper', 10 );
remove_action( 'woocommerce_after_main_content', 'woocommerce_output_content_wrapper_end', 10 );

/**
 * Displays single product loop.
 *
 * Uses WooCommerce structure and contains all existing WooCommerce hooks.
 *
 * Code based on WooCommerce 1.5.5 woocommerce_single_product_content().
 *
 * @see woocommerce/woocommerce-template.php
 *
 * @since 0.9.0
 */
function gencwooc_single_product_loop() {

	do_action( 'woocommerce_before_main_content' );

	$wc_query = apply_filters( 'gencwooc_custom_query', false );

	if ( ! $wc_query ) {
		global $wp_query;

		$wc_query = $wp_query;
	}

	if ( $wc_query->have_posts() ) {
		while ( $wc_query->have_posts() ) {
			$wc_query->the_post();

			do_action( 'woocommerce_before_single_product' );
			?>

			<div id="product-<?php the_ID(); ?>" <?php post_class(); ?>>
				<?php do_action( 'woocommerce_before_single_product_summary' ); ?>

				<div class="summary">
					<?php do_action( 'woocommerce_single_product_summary' ); ?>
				</div>

				<?php do_action( 'woocommerce_after_single_product_summary' ); ?>
			</div>

			<?php
			do_action( 'woocommerce_after_single_product' );
		}
	}

	do_action( 'woocommerce_after_main_content' );

}
add_action( 'genesis_loop', 'gencwooc_single_product_loop' );


/**
 * Return the SKU/part number in a heading.
 *
 * @return void
 */
function gearys_parts_sku_heading() {
	global $product;
	$sku    = $product->get_sku();
	$output = "<h3><small>Part number: {$sku}</small></h3>";
	echo $output;
}


/**
 * Return a custom email us button to be used on single-post type part/clearance.
 *
 * @return void
 */
function gearys_email_us_button() {
	global $post;
	$post_title = get_the_title();
	$output     = "<a class='button parts-email' href='mailto:info@gearysgarage.com?subject={$post_title}' target='_blank'>Email about this part</a>";
	echo $output;
}
// add_action( 'genesis_loop', 'gearys_email_us_button' );


/**
 * Utility function to determine if this single product should have our custom
 * awesome sauce, or leave it to the default output.
 *
 * @return void
 */
function gearys_is_excluded() {
	global $post;

	// our haystack (or disallowed category IDs).
	$gearys_excluded_categories = array(
		139, // merch.
		138, // lawn.
		15, // uncategorised.
		210, // parts - clearance
		180, // parts
	);

	$gearys_current_post_category_object = get_the_terms( $post, 'product_cat' );

	// our needle.
	$gearys_current_post_category_IDs = wp_list_pluck( $gearys_current_post_category_object, 'term_id' );

	$post_contains_excluded_cats = array_intersect( $gearys_excluded_categories, $gearys_current_post_category_IDs );

	if ( $post_contains_excluded_cats ) {
		return true;
	} else {
		return false;
	}

}

function awesome_sauce_summary() {
	global $post;

	// if ACF is not active, bail.
	if( ! class_exists('ACF') ) {
		return;
	}

	// product name.
	$vehicle_name = get_the_title();

	$field_objs = get_field_objects();
	// $fields = get_fields();
	// print_r_pre( $field_objs );

	$brand = '';
	$manufacturer = get_the_term_list( $post, 'brand' );
	if( $manufacturer && ! is_wp_error( $manufacturer ) ) {
		$brand = "
			<dt>Brand:</dt>
			<dd>{$manufacturer}</dd>
			";
	}

	$model = '';
	if ( !empty( $field_objs['model']['value'] ) ) {
		$model = "
					<dt>{$field_objs['model']['label']}:</dt>
					<dd>{$field_objs['model']['value']}</dd>
					";
	}

	$hours = '';
	if ( !empty( $field_objs['engine_hours']['value'] ) ) {
		$hours = "
					<dt>{$field_objs['engine_hours']['label']}:</dt>
					<dd>{$field_objs['engine_hours']['value']} hours</dd>
					";
	}

	$year = '';
	if ( !empty( $field_objs['year']['value'] ) ) {
		$year = "
					<dt>{$field_objs['year']['label']}:</dt>
					<dd>{$field_objs['year']['value']}</dd>
					";
	}

	$front_loader = '';
	if ( !empty( $field_objs['front_loader']['value'] ) ) {if ( 'true' === $field_objs['front_loader']['value']['has_frontloader'] ) {
		$front_loader = "
		<dt>Frontloader:</dt>
		<dd>Yes {$field_objs['front_loader']['value']['front_loader']}</dd>
		";
	}}

	$location = '';
	if ( !empty( $field_objs['location']['value']  )) {
		$location = "
					<dt>{$field_objs['location']['label']}:</dt>
					<dd>{$field_objs['location']['value']}</dd>
					";
	}

	$name = '';
	$salesperson = '';
	$salesperson_details = '';
	$mobile = '';
	$office = '';
	$email = 'info@gearysgarage.com';

	$message_string = 'I am interested in the '. $vehicle_name;
	$urlencodedtext = urlencode( $message_string );

	// if there is no salesperson chosen.
	if ( ! $field_objs['salesperson']['value'] ) {

		// then call Clarecastle or Kilmeedy office.
		if ( 'Kilmeedy' === $field_objs['location']['value'] ) {
			$office = '+3536387004';
		} else {
			$office = '+3536847100'; // Clare.
		}

	} else {

		$key = $field_objs['salesperson']['value'];

		// if that person is in our official list, above.
		if ( array_key_exists( $key, SALESPEOPLE ) ) {
			$name = SALESPEOPLE[$key]['name'];
			$mobile = SALESPEOPLE[$key]['mobile'];
			$office = SALESPEOPLE[$key]['office'];
			$email = SALESPEOPLE[$key]['email'];
		}

		$phone = $mobile ? $mobile : $office; // set office number as fallback.
		$salesperson  = "
			<dt>Salesperson:</dt>
			<dd>
				{$name}, <a href='tel:{$phone}' title='Click to Call'>{$phone}</a>
			</dd>
		";

	}

	$salesperson_details = "
		<a class='button btn-light m-2' href='mailto:{$email}?subject={$urlencodedtext}' title='Email the salesperson about this product' target='_blank'>
			<i class='fas fa-solid fa-envelope-open-text'></i> Email
		</a>
	";

	// WHATSAPP.
	if ( $mobile ) {
		$salesperson_details .= "
		<a class='button btn-light m-2' href='https://wa.me/{$mobile}?text={$urlencodedtext}' title='Click to start a WhatsApp Chat'>
			<i class='fab fa-brands fa-whatsapp'></i> WhatsApp
		</a>";
	}
	$phone = $mobile ? $mobile : $office; // set office number as fallback.

	$salesperson_details .= "
		<a class='button btn-light m-2' href='tel:{$phone}' title='Click to Call'>
			<i class='fas fa-solid fa-phone-volume'></i> Call
		</a>
	";

	$output = "
	<div class='clearfix gearys-summary'>
			<h3>Summary Details</h3>
			<div>
				<dl class='row'>
					{$brand}
					{$model}
					{$year}
					{$hours}
					{$front_loader}
					{$location}
					{$salesperson}
				</dl>
				<p>{$salesperson_details}</p>
				<p>For more, see <a href='#additional-details'>Additional Details</a>, below.</p>
			</div>
	</div>
	<h3 class='gearys-summary'>Brief Description</h3>
	";

	echo $output;

}

function awesome_sauce_details() {
	global $post;

	$field_objs = get_field_objects();

	print_r_hidden( $field_objs['front_axle']['value'] );
	// print_r_hidden( $field_objs );


	// $fields = get_fields();

	$all_extras = array();

	if ( !empty( $field_objs['new_or_used']['value'] ) ) {
		$all_extras[] = $field_objs['new_or_used'];
	}
	if ( !empty( $field_objs['condition']['value'] ) ) {
		$all_extras[] = $field_objs['condition'];
	}
	if ( !empty( $field_objs['tires_front']['value'] ) ) {
		$all_extras[] = $field_objs['tires_front'];
	}
	if ( !empty( $field_objs['tires_back']['value'] ) ) {
		$all_extras[] = $field_objs['tires_back'];
	}
	if ( !empty( $field_objs['front_loader']['value'] )) {
		if ( 'Yes' === $field_objs['front_loader']['value']['has_frontloader'] ) {
			$all_extras['front_loader']['label'] = 'Frontloader';
			$all_extras['front_loader']['value'] = $field_objs['front_loader']['value']['front_loader'];
		}
	}
	if ( !empty( $field_objs['engine_hours']['value'] ) ) {
		$all_extras[] = $field_objs['engine_hours'];
	}
	if ( !empty( $field_objs['cutter_head_hours']['value'] ) ) {
		$all_extras[] = $field_objs['cutter_head_hours'];
	}
	if ( !empty( $field_objs['bale_count']['value'] ) ) {
		$all_extras[] = $field_objs['bale_count'];
	}
	if ( !empty( $field_objs['lighting_package']['value'] ) ) {
		$all_extras[] = $field_objs['lighting_package'];
	}
	if ( !empty( $field_objs['additional_lights']['value'] ) ) {
		$all_extras['additional_lights']['label'] = $field_objs['additional_lights']['label'];
		$all_extras['additional_lights']['value'] = implode( ', ', $field_objs['additional_lights']['value'] );
	}
	if ( !empty( $field_objs['cab_suspension']['value'] ) ) {
		$all_extras['cab_suspension']['label'] = $field_objs['cab_suspension']['label'];
		$all_extras['cab_suspension']['value'] = 'Yes';
	}
	if ( !empty( $field_objs['seat']['value'] ) ) {
		$all_extras[] = $field_objs['seat'];
	}
	if ( !empty( $field_objs['passenger_seat']['value'] ) ) {
		$all_extras['passenger_seat']['label'] = $field_objs['passenger_seat']['label'];
		$all_extras['passenger_seat']['value'] = 'Yes';
	}
	if ( !empty( $field_objs['air_conditioning']['value'] ) ) {
		$all_extras['air_conditioning']['label'] = $field_objs['air_conditioning']['label'];
		$all_extras['air_conditioning']['value'] = 'Yes';
	}
	if ( !empty( $field_objs['roof']['value'] ) ) {
		$all_extras[] = $field_objs['roof'];
	}
	if ( !empty( $field_objs['other_operator_station_features']['value'] ) ) {
		$all_extras['other_operator_station_features']['label'] = $field_objs['other_operator_station_features']['label'];
		$all_extras['other_operator_station_features']['value'] = implode( ', ', $field_objs['other_operator_station_features']['value'] );
	}
	if ( !empty( $field_objs['software']['value'] ) ) {
		$all_extras['software']['label'] = $field_objs['software']['label'];
		$all_extras['software']['value'] = implode( ', ', $field_objs['software']['value'] );

	}
	if ( !empty( $field_objs['hydraulic_system_type']['value'] ) ) {
		$all_extras[] = $field_objs['hydraulic_system_type'];
	}
	if ( !empty( $field_objs['number_of_rear_selective_control_valves_scvs']['value'] ) ) {
		$all_extras[] = $field_objs['number_of_rear_selective_control_valves_scvs'];
	}
	if ( !empty( $field_objs['pump_rated_output']['value'] ) ) {
		$all_extras[] = $field_objs['pump_rated_output'];
	}
	if ( !empty( $field_objs['front_axle']['value'] ) ) {
		$all_extras[] = $field_objs['front_axle'];
		print_r_hidden( $field_objs['front_axle'] );
	}
	if ( !empty( $field_objs['transmission_type']['value'] ) ) {
		$all_extras['transmission_type']['label'] = $field_objs['transmission_type']['label'];
		$all_extras['transmission_type']['value'] = implode( ', ', $field_objs['transmission_type']['value'] );
	}
	if ( !empty( $field_objs['transmission_speed']['value'] ) ) {
		$all_extras[] = $field_objs['transmission_speed'];
	}
	if ( !empty( $field_objs['reverser']['value'] ) ) {
		$all_extras['reverser']['label'] = $field_objs['reverser']['label'];
		$all_extras['reverser']['value'] = implode( ', ', $field_objs['reverser']['value'] );

	}
	if ( !empty( $field_objs['power_take_off_pto']['value'] ) ) {
		$pto = $field_objs['power_take_off_pto']['value'];
		if( have_rows('power_take_off_pto') ):
				while( have_rows('power_take_off_pto') ):
					the_row();
					if( $pto['rated_pto_power_hp_sae'] ) {
						$tmp = get_sub_field_object( 'rated_pto_power_hp_sae' );
						$all_extras['rated_pto_power_hp_sae']['label'] = $tmp['label'];
						$all_extras['rated_pto_power_hp_sae']['value'] = $tmp['value'];
					}
					if( $pto['pto_hp'] ) {
						$tmp = get_sub_field_object( 'pto_hp' );
						$all_extras['pto_hp']['label'] = $tmp['label'];
						$all_extras['pto_hp']['value'] = $tmp['value'];
					}
					if( $pto['pto'] ) {
						$tmp = get_sub_field_object( 'pto' );
						$all_extras['pto']['label'] = $tmp['label'];
						$all_extras['pto']['value'] = implode( ', ', $tmp['value'] );
					}
					if( $pto['remote_pto'] ) {
						$tmp = get_sub_field_object( 'remote_pto' );
						$all_extras['remote_pto']['label'] = $tmp['label'];
						$all_extras['remote_pto']['value'] = 'Yes';
					}
			endwhile;
		endif;
	}
	if ( !empty( $field_objs['extras']['value'] ) ) {
		$extras = $field_objs['extras']['value'];
		if( have_rows('extras') ):
				while( have_rows('extras') ):
					the_row();
					if( $extras['electrical_spools'] ) {
						$tmp = get_sub_field_object( 'electrical_spools' );
						$all_extras['electrical_spools']['label'] = $tmp['label'];
						$all_extras['electrical_spools']['value'] = $tmp['value'];
					}
					if( $extras['mechanical_spools'] ) {
						$tmp = get_sub_field_object( 'mechanical_spools' );
						$all_extras['mechanical_spools']['label'] = $tmp['label'];
						$all_extras['mechanical_spools']['value'] = $tmp['value'];
					}
					if( $extras['air_brakes'] ) {
						$tmp = get_sub_field_object( 'air_brakes' );
						$all_extras['air_brakes']['label'] = $tmp['label'];
						$all_extras['air_brakes']['value'] = 'Yes';
					}
					if( $extras['one_previous_owners'] ) {
						$tmp = get_sub_field_object( 'one_previous_owners' );
						$all_extras['one_previous_owners']['label'] = $tmp['label'];
						$all_extras['one_previous_owners']['value'] = 'Yes';
					}
					if( $extras['other'] ) {
						$tmp = get_sub_field_object( 'other', false );
						$all_extras['other']['label'] = $tmp['label'];
						$all_extras['other']['value'] = wpautop( $tmp['value'] );
					}
			endwhile;
		endif;
	}

	$output = "
	<div class='clearfix gearys-details' id='additional-details'>
		<details open>
			<summary class='gearys-summary-summary'>Additional Details</summary>
			<div>
			";
	foreach( $all_extras as $extra ) {
		$output .= "
		<dl class='row'>
			<dt>{$extra['label']}:</dt>
			<dd>{$extra['value']}</dd>
		</dl>
		";
	}

	$output .= "
			</div>
		</details>
	</div>
	";

	// print_r_hidden( $all_extras );

	echo $output;
}

function gearys_margin_scheme_info() {
	global $product;

	if ( 'simple' === $product->get_type() ) {
		// if it has a price.
		if ( $product->get_price() ) {
			if ( 'taxable' === $product->get_tax_status() ) {
				if ( 'margin-scheme' === $product->get_tax_class() ) {
					echo "
					<div class='margin-scheme-info'>
						<p>
							<small>
								<em>
									<strong>* VAT AND MARGIN SCHEME</strong><br />
									VAT is charged at the current Irish VAT rate on applicable products. Margin scheme applies to certain vehicles, and no VAT applies to items on the Margin scheme.
								</em>
							</small>
						</p>
					</div>
					";
				}
			}
		}
	}
	return;
}

// PARTS or CLEARANCE SINGLE POST.
if ( has_term( 'clearance', 'product_cat' ) || has_term( 'parts', 'product_cat' ) ) {

	// remove thubmnail.
	remove_action( 'woocommerce_before_single_product_summary', 'woocommerce_show_product_images', 20 );

	add_action( 'woocommerce_single_product_summary', 'gearys_parts_sku_heading' );

	// add "email us" button.
	add_action( 'woocommerce_single_product_summary', 'gearys_email_us_button', 80 );

	// remove related products.
	remove_action( 'woocommerce_after_single_product_summary', 'woocommerce_output_related_products', 20 );
}

// CUSTOM SAUCE POST.
$default_output = gearys_is_excluded();
if ( ! $default_output ) {
	/* Good to go - this has custom sauce. */
	add_action( 'woocommerce_single_product_summary', 'awesome_sauce_summary', 15 );
	add_action( 'woocommerce_single_product_summary', 'awesome_sauce_details', 25 );
	add_action( 'woocommerce_single_product_summary', 'gearys_margin_scheme_info', 21 );
	remove_action( 'woocommerce_single_product_summary', 'woocommerce_template_single_add_to_cart', 30 );
}

genesis();
