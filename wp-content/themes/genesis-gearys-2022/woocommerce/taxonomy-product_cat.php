<?php
/**
 * This template displays the Product Category and Tag taxonomy term archives.
 *
 * @package Genesis_Connect_WooCommerce
 * @version 4.7.0
 * @since 0.9.0
 *
 * Note for customisers/users: Do not edit this file!
 * ==================================================
 * If you want to customise this template, copy this file (keep same name) and place the
 * copy in the child theme's woocommerce folder, ie themes/my-child-theme/woocommerce
 * (Your theme may not have a 'woocommerce' folder, in which case create one.)
 * The version in the child theme's woocommerce folder will override this template, and
 * any future updates to this plugin won't wipe out your customisations.
 */

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

// CONSTANT DEFINING THE SALESPEOPLE DETAILS.
require_once get_stylesheet_directory() . '/woocommerce/salespeople.php';

remove_action( 'genesis_loop', 'genesis_do_loop' );
remove_action( 'woocommerce_archive_description', 'woocommerce_taxonomy_archive_description' );
remove_action( 'woocommerce_before_main_content', 'woocommerce_breadcrumb', 20 );
remove_action( 'woocommerce_before_main_content', 'woocommerce_output_content_wrapper', 10 );
remove_action( 'woocommerce_after_main_content', 'woocommerce_output_content_wrapper_end', 10 );
remove_action( 'woocommerce_before_shop_loop', 'woocommerce_result_count', 20 );

add_filter( 'woocommerce_show_page_title', '__return_false' );

/**
 * Fall back to the archive description if no intro text is set.
 *
 * @since 1.0.0
 *
 * @param string $intro_text The default Genesis archive intro text.
 *
 * @return string Archive intro text, or archive description if no intro text set.
 */
function genesiswooc_term_intro_text_output( $intro_text ) {

	$wp_archive_description = get_the_archive_description();

	if ( ! $intro_text && $wp_archive_description ) {
		return $wp_archive_description;
	}

	return $intro_text;

}
add_filter( 'genesis_term_intro_text_output', 'genesiswooc_term_intro_text_output' );


/**
 * Displays shop items for the queried taxonomy term.
 *
 * This function has been refactored in 0.9.4 to provide compatibility with
 * both WooCommerce 1.6.0 and backwards compatibility with older versions.
 * This is needed thanks to substantial changes to WooCommerce template contents
 * introduced in WooCommerce 1.6.0.
 *
 * @global $woocommerce $woocommerce The WooCommerce instance.
 *
 * @uses genesiswooc_content_product() if WooCommerce is version 1.6.0+
 * @uses genesiswooc_product_taxonomy() for earlier WooCommerce versions
 *
 * @since 0.9.0
 */
function genesiswooc_product_taxonomy_loop() {

	global $woocommerce;

	$new = version_compare( $woocommerce->version, '1.6.0', '>=' );

	if ( $new ) {
		genesiswooc_content_product();
	} else {
		genesiswooc_product_taxonomy();
	}

}
add_action( 'genesis_loop', 'genesiswooc_product_taxonomy_loop' );


/**
 * Get the Product Year and Engine Hours from ACF.
 *
 */
function gearys_used_get_custom_fields_summary() {
	// if ACF is not active, bail.
	if( ! class_exists('ACF') ) {
		return;
	}
	$field_objs = get_field_objects();
	$fields = get_fields();

	$separator = ' &bull; ';

	$elements = array();
	$year = '';
	if ( $field_objs['year']['value'] ) {
		$year = $field_objs['year']['value'];
		$elements[] = $year;
	}

	$hours = '';
	if ( $field_objs['engine_hours']['value'] ) {
		$hours = $field_objs['engine_hours']['value'] . ' hours';
		$elements[] = $hours;
	}

	$location = '';
	if ( $field_objs['location']['value'] ) {
		$location = $field_objs['location']['value'];
		$elements[] = $location;
	}

	if( is_array( $elements ) ) {
		echo '<div class="summary"><strong>' . implode( $separator, $elements ) . '</strong></div>';
	} else {
		print_r_hidden( $elements );
	}

}

function gearys_get_read_more_btn() {
	global $product;
	$href = $product->get_permalink();
	return "
	<div class='read-more'>
		<a class='button btn-white gb-button-size-small m-2' href='{$href}' title='Read more' target='_blank'>
			<i class='fab fa-readme'></i> Read more
		</a>
	</div>
	";
}

function gearys_used_get_custom_contact_details() {

	// if ACF is not active, bail.
	if( ! class_exists('ACF') ) {
		return;
	}
	$field_objs = get_field_objects();
	$fields = get_fields();
	$vehicle_name = get_the_title();

	$salesperson_details = "";

	if ( $field_objs['salesperson']['value'] ) {
		$name = '';

		// if there is a salesperson.
		if ( $field_objs['salesperson']['value'] ) {

			$key = $field_objs['salesperson']['value'];
			// if that person is in our official list, above.
			if ( array_key_exists( $key, SALESPEOPLE ) ) {
				$name = SALESPEOPLE[$key]['name'];
				$mobile = SALESPEOPLE[$key]['mobile'];
				$office = SALESPEOPLE[$key]['office'];
				$email = SALESPEOPLE[$key]['email'];
			}
		}

		$message_string = 'I am interested in the '. $vehicle_name;
		$urlencodedtext = urlencode( $message_string );

		$salesperson_details .= "
			<a class='button btn-white gb-button-size-small m-2' href='mailto:{$email}?subject={$urlencodedtext}' title='Email the salesperson about this product' target='_blank'>
				<i class='fas fa-solid fa-envelope-open-text'></i> Email
			</a>";

		// WHATSAPP.
		if ( $mobile ) {
			$salesperson_details .= "
			<a class='button btn-white gb-button-size-small m-2' href='https://wa.me/{$mobile}?text={$urlencodedtext}' title='Click to start a WhatsApp Chat'>
				<i class='fab fa-brands fa-whatsapp'></i> WhatsApp
			</a>";
		}

		$phone = $mobile ? $mobile : $office; // set office number as fallback.

		$salesperson_details .= "
			<a class='button btn-white gb-button-size-small m-2' href='tel:{$phone}' title='Click to Call'>
				<i class='fas fa-solid fa-phone-volume'></i> Call
			</a>
		";
	}

	echo '<div class="buttons">' . $salesperson_details . '</div>';

	echo gearys_get_read_more_btn();
}


function gearys_used_wrap_title_open() {
	echo "<div class='wrap-title'>";
}
function gearys_used_wrap_title_close() {
	echo "</div>";
}

function gearys_used_wrap_thumbnail_open() {
	echo "<div class='featured_thumb'>";
}
function gearys_used_wrap_thumbnail_close() {
	echo "</div>";
}

function gearys_used_get_permalink_open() {
	global $product;
	$href = $product->get_permalink();
	echo "<a href='{$href}' class='product_link'>";
}
function gearys_used_get_permalink_close() {
	echo "</a>";
}

function gearys_get_excerpt() {

	$excerpt = get_the_excerpt();
	$excerpt = substr($excerpt, 0, 60);
	$result = substr($excerpt, 0, strrpos($excerpt, ' '));

	echo "<div class='excerpt'>";
	echo $result;
	echo "</div>";
}

function gearys_get_used_gallery() {
	global $product;
	$attachment_ids = $product->get_gallery_image_ids();
	echo "<div class='product-gallery'>";
	foreach( array_slice( $attachment_ids, 0, 9 ) as $attachment_id ) {
		// get full size url.
		$srcset = wp_get_attachment_image_srcset( $attachment_id, 'sidebar-featured' );

		$full_url = wp_get_attachment_image_src( $attachment_id, 'full' )[0];
		$display_url = wp_get_attachment_image_src( $attachment_id, 'sidebar-featured' )[0];

      echo "
		<a href='{$full_url}'>
			<img srcset='" . esc_attr( $srcset ) . "' src='{$display_url}' />
		</a>";

    }

	echo "</div>";
}


/**
 * Custom Tweaks for Tractor listings
 *
 * @return void
 */
function gearys_archive_used_listing() {

	global $product;

	if( is_main_query() ) {

		// Add a breadcrumb.
		add_action( 'genesis_before_loop', 'woocommerce_breadcrumb' );

		/* Default Woo Structure goes as follows:
		 *
		 * woocommerce_before_shop_loop_item:
		 * 	woocommerce_template_loop_product_link_open
		 *
		 * woocommerce_before_shop_loop_item_title:
		 * 	woocommerce_show_product_loop_sale_flash - 10
		 * 	woocommerce_template_loop_product_thumbnail - 10
		 *
		 * woocommerce_shop_loop_item_title:
		 *		woocommerce_template_loop_product_title
		 *
		 * woocommerce_after_shop_loop_item_title:
		 *		woocommerce_template_loop_rating
		 *		woocommerce_template_loop_price
		 *
		 * woocommerce_after_shop_loop_item:
		 *		woocommerce_template_loop_product_link_close
		 *		woocommerce_template_loop_add_to_cart
		 */

		// remove the opening link and wrap it around the thumbnail instead .
		remove_action( 'woocommerce_before_shop_loop_item', 'woocommerce_template_loop_product_link_open' );
		remove_action( 'woocommerce_after_shop_loop_item', 'woocommerce_template_loop_product_link_close', 5 );

		/* ----------------- THUMBNAIL ----------------- */
		// wrap our own link around the thumbnail.
		add_action( 'woocommerce_before_shop_loop_item_title', 'gearys_used_wrap_thumbnail_open', 8 );
		add_action( 'woocommerce_before_shop_loop_item_title', 'gearys_used_get_permalink_open', 9 );
		// the thumbnail is output here at priority 10.
		add_action( 'woocommerce_before_shop_loop_item_title', 'gearys_used_get_permalink_close', 11 );
		add_action( 'woocommerce_before_shop_loop_item_title', 'gearys_used_wrap_thumbnail_close', 12 );

		/* ----------------- TITLE ----------------- */
		// wrap link around the title.
		add_action( 'woocommerce_shop_loop_item_title', 'gearys_used_wrap_title_open', 8 );
		add_action( 'woocommerce_shop_loop_item_title', 'gearys_used_get_permalink_open', 9 );
		// title is output here at priority 10.
		add_action( 'woocommerce_shop_loop_item_title', 'gearys_used_get_permalink_close', 11 );
		add_action( 'woocommerce_shop_loop_item_title', 'gearys_get_excerpt', 12 );
		add_action( 'woocommerce_shop_loop_item_title', 'gearys_used_wrap_title_close', 13 );

		add_action( 'woocommerce_after_shop_loop_item_title', 'gearys_used_get_custom_fields_summary' );
		add_action( 'woocommerce_after_shop_loop_item_title', 'gearys_used_get_custom_contact_details' );

		add_action( 'woocommerce_after_shop_loop_item_title', 'gearys_get_used_gallery', 50 );


	}

}


function gearys_get_parts_search() {
	$string = '<div class="alignfull">';
	$string .= do_shortcode( '[ivory-search id="4854" title="Parts search"]');
	$string .= '</div>';
	echo $string;
}


function gearys_get_product_search() {
	$string = '<!-- GREP -->';
	$string .= '<div class="alignfull">';
	$string .= do_shortcode( '[ivory-search id="4860" title="Used equipment"]');
	$string .= '</div>';
	echo $string;
}




/**
 * Custom Tweaks for Parts listings
 *
 * @return void
 */
function gearys_archive_parts_listing() {
	// Add a breadcrumb.
	add_action( 'genesis_before_loop', 'woocommerce_breadcrumb' );

	if( is_main_query() ) {
		// remove add to cart button.
		add_filter( 'woocommerce_loop_add_to_cart_link', 'gearys_remove_add_to_cart_buttons', 1 );

		// remove thumbnail.
		// remove_action( 'woocommerce_before_shop_loop_item_title', 'woocommerce_template_loop_product_thumbnail' );

		// remove price.
		remove_action( 'woocommerce_after_shop_loop_item_title', 'woocommerce_template_loop_price' );

		// if ( is_tax( 'product_cat', array( 'parts', 'clearance' ) ) ) {
		// 	// add custom search form.
		// 	add_action( 'woocommerce_archive_description', 'gearys_get_parts_search' );
		// } else {
		// 	add_action( 'woocommerce_archive_description', 'gearys_get_product_search' );
		// }
	}

}


if ( is_product_category( 'parts' ) || is_product_category( 'clearance' ) ) {
	gearys_archive_parts_listing();
} else {
	gearys_archive_used_listing();
}
genesis();
